/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: STARDIST {
        ext.args  = [ "",
            params.stardist_model                                    ? "--model ${params.stardist_model}"                                    : "",
            (params.stardist_n_tiles_x && params.stardist_n_tiles_y) ? "--n_tiles ${params.stardist_n_tiles_x} ${params.stardist_n_tiles_y}" : "",
            ].join(" ").trim()
    }

    withName: MICRONUCLAI_PREDICT{
        ext.args = ["",
            params.micronuclai_expansion       ? "--expansion ${params.micronuclai_expansion}"                  : "",
            params.micronuclai_resizing_factor ? "--resizing_factor ${params.micronuclai_resizing_factor}"      : "",
            params.micronuclai_size            ? "--size ${params.micronuclai_size} ${params.micronuclai_size}" : "",
        ].join(" ").trim()
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
